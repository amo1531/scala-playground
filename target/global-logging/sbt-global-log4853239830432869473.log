[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 1.8.0_131)
[debug]       Load.loadUnit: plugins took 117.544486ms
[debug]       Load.loadUnit: defsScala took 0.375664ms
[debug] [Loading] Scanning directory /Users/amo1531/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/amo1531/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 22.314718 ms
[debug]           Load.resolveProject(global-plugins) took 140.653209ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /Users/amo1531/.sbt/1.0/plugins, plugins: List(<none>))) took 194.793476ms
[debug] [Loading] Done in /Users/amo1531/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 217.501136ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.392869ms
[debug]     Load.loadUnit(file:/Users/amo1531/.sbt/1.0/plugins/, ...) took 343.897905ms
[debug]   Load.apply: load took 2052.367762ms
[debug]   Load.apply: resolveProjects took 5.678763ms
[debug]   Load.apply: finalTransforms took 58.428997ms
[debug]   Load.apply: config.delegates took 8.477976ms
[debug]   Load.apply: Def.make(settings)... took 392.442174ms
[debug]   Load.apply: structureIndex took 86.718421ms
[debug]   Load.apply: mkStreams took 2.392247ms
[info] loading global plugins from /Users/amo1531/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5431.491904ms
[debug]           Load.loadUnit: plugins took 10.674174ms
[debug]           Load.loadUnit: defsScala took 0.004217ms
[debug] [Loading] Scanning directory /Users/amo1531/Side/project
[debug]             Load.loadUnit: mkEval took 8.424029ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /Users/amo1531/Side/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.323809 ms
[info] loading settings for project side-build from plugins.sbt ...
[debug]               Load.resolveProject(side-build) took 1.995264ms
[debug]             Load.loadTransitive: finalizeProject(Project(id side-build, base: /Users/amo1531/Side/project, plugins: List(<none>))) took 3.78357ms
[debug] [Loading] Done in /Users/amo1531/Side/project, returning: (side-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 112.092712ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.18913ms
[debug]         Load.loadUnit(file:/Users/amo1531/Side/project/, ...) took 126.681187ms
[debug]       Load.apply: load took 127.704913ms
[debug]       Load.apply: resolveProjects took 0.103772ms
[debug]       Load.apply: finalTransforms took 9.009824ms
[debug]       Load.apply: config.delegates took 0.477252ms
[debug]       Load.apply: Def.make(settings)... took 74.23882ms
[debug]       Load.apply: structureIndex took 21.97601ms
[debug]       Load.apply: mkStreams took 0.002149ms
[info] loading project definition from /Users/amo1531/Side/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
